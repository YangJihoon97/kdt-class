<html 기본 문법>

-폴더/파일명 => 영문(대/소)+숫자+'_'+'-' (꼭 시작문자는 영문)   
 > ex)sample_1.html
-html/css/javascript 영문 대소문자를 구분한다
-html => 무조건 영문 소문자로 마크업한다
-대다수의 태그들은 <태그명></태그명>  => 태그의 계층(DOM-부모/자식 관계)
-시작태그만 있는 경우(선언/명시/연결)
-<meta>,
-태그들은 계층(부모/자식)을 표현할 수 있다
-모든 웹문서(파일명.html)는 하나의 <html></html> => 최상위 부모
       - <html lang="주언어명시">
       - 한국어는 <html lang="ko">
         영어는 <html lang="en">
         독일어는 <html lang="de">
         일어는 <html lang="ja">
         중국어는 <html lang="zh">
         프랑스어는 <span lang="fr">
-<head></head>  => 화면에 보여지는 부분 이외의 것을 명시(코드명시/선언/css 또는 js 파일을 연결) 
    -<title>사이트제목</title>
    -<meta> => 본문에 코드를 처리하기 전에 미리 브라우저에게 특정의 정보를 알려주는 역할
           -<meta charset="UTF-8">  => 컨텐츠 타입 선언 한다.
           - UTF-8(유니코드) => (한글/이진언어)통일
-<body></body>  => 웹페이지의 본문을 처리하는 태그(화면 UI 구현)
-html 엔티티(스페이스(공백문자->' ')/엔터값/특수문자)
       -공백문자(&nbsp;)
       -엔터(<br>)
       -<(&lt;) , >(&gt;)
       -&(&amp;)
       -카피라이트(&copy)
       -https://unicode-table.com/kr/html-entities/
-html의 기본 속성
       -글꼴크기(font-size) -> 16px
       -글꼴(font-family) -> 굴림
       -색상(color) -> black / #000
-주석=> 실제로 처리/계산 되지 않는 코드/설명글
      -html 주석 ->   <!-- 주석문 -->
      -css 주석 -> /* 주석문 */


-템플릿
  - html문서에서 꼭 필수적으로 필요한 코드
  - html4.01 / xhtml1.0 / html5(현재)
  - html5 템플릿 문서  =>  html:5 (tab)  / !  (tab)
  
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Document</title>
</head>
<body>
    
</body>
</html>

-<!DOCTYPE>  => html의 세가지 버전을 브라우저에게 명시/알려주는 역할/코드를 렌더링(계산)
    -html4.01
       <!DOCTYPE html PUBLIC "-//W3C//DTD html 4.01 
        Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/html4-transitional.dtd">
    -xhtml1.0
        <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 
        Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
    -html5
        <!DOCTYPE html>
________________________________________________________________________________________________________________

1. 다양한 태그들의 특징/활용

-<h1>~<h6> 헤딩태그(요소)=> 제목/타이틀/헤드라인
    - 웹접근성(표준) 가장 중요한 요소
    - 목차(outline)를 표현할 수 있는 수단을 제공***
    - <h1> => 사이트로고, 한 페이당 1개만 사용한다
    - <h1>~<h6> => 중간 계층을 생략할 수 없다.
    - 스크린 리더기가 실제로 해당 태그를 읽어준다
    - default css속성
         -font-size / 상하정렬 / 상하마진 / width(부모태그의 100%) / bold(굵게)
    - 상속시(css) -> font-size는 영향을 받지않는다

-<p> 단락(콘텐츠/내용 글)
    - 상하여백(margin)을 가지고있다.
    - 정렬방식: 상하정렬/수직정렬 (display:block)
    - width(폭) : 부모태그의 100%

-<div> 빈박스/상자-> 콘텐츠를 구분할때 사용/묶을때 사용
   - 레이아웃을 잡는 요소
   - default css속성
         -상하/수직정렬,width(부모태그의 100%) 
   - <div> 태그는 모든 다른 요소(태그)를 자식요소로 갖을 수 있다
   - <div>는 중첩해서 사용할 수  있다

-<span>,<strong>,<em>
   - 문단/문장/단락/제목/글 에 특정 단어 등에 강조/표현/스타일 
   - default css속성
         -좌우/수평정렬/,width(내용/콘텐츠의 길이,양)
   - <span> -> 기본 css가 적용되어 있지 않다
                 -> 제작자/개발자의 주관적인 UI 표현
   - <strong> -> font-weight:bold (굵게) -> 강한강조
   - <em>   -> font-style: italic (기울임) -> 약한강조
  

________________________________________________________________________________________________________________
2. css 스타일링 연결 방식

*css 스타일링 3가지 방식
 선택자{속성:값;
           속성:값;
 }

*우선 순위(해당 css 속성이 중복/충돌할때)
  -상속 < 자신 
  -인라인 > 임베디드 > 링크드

1)태그에 직접 쓰는 방법(인라인 스타일,로컬 스타일)
   <p style="color:red; font-size:50px; font-weight: bold;">

2)HTML 문서에 스타일을 포함하는 방법(임베디드 스타일,페이지 스타일)
    <head></head> 태그 사이에 코딩
   <style>
       h1{font-size: 16px;}
       p{color:red;}
   </style>

3)분리되어 있는 css파일을 링크하는 방법(링크드 스타일)=>가장 적합한 방법(코드의 재사용)***
   -독립적인 css파일을 생성한다
    <ex.css>
      h1{font-size: 16px;}
      p{color:red;}

    <ex.html>
    <link rel="stylesheet" href="ex.css">
________________________________________________________________________________________________________________
3. 태그의 분류!!! 

1)inline-level Element(인라인요소)
- <span>, <strong>, <em>
- 정렬방식 > 수평정렬/좌우정렬
- width(너비) > 콘텐츠 요소의 길이/양 에 맞춰서 조절됨
- **inline요소는 Block요소의 자식 계층으로만 사용된다.**
- inline요소끼리는 부모/자식 관계가 성립한다.(인라인 요소끼리에서도 서열이 있음)
>>예외 : 


2)Block-level Element(블럭요소)
- <h1>~<h6>, <p>, <div>  
- 정렬방식 > 수직정렬/상하정렬
- width(너비) > 부모태그의 100%
- **Block요소는 inline요소의 부모 계층으로만 사용할 수 있다.**
- inline 요소끼리는 부모/자식 관계 모두 다르게 성립한다.

*상속(css)
- 표준화된 계층
- 부모요소에 css를 적용하면 자손요소에 css속성 값이 물려짐.
- 우선순위 = 상속(css) < 해당요소(css) . 원래 가지고 있는 설정값이 우선

서열
HTML > BODY > div> heading, P > inline
________________________________________________________________________________________________________________

5. class 와 id
- 요소의 네이밍 기법 => 의미있는 네이밍
- 클래스/아이디명 -> 영문(대/소), 숫자, _, - (사용지양)  *첫글자는 영문시작*
- 두단어 이상 > - 언더스코어표기법 => ex) notice_tit / submit_btn
               - 카멜표기법 => noticTit / submitBtn
               - 스네이크표기법 => notice-tit / submit- btn
- 
              
               
1)class
 - <태그 class="클래스명">
 - css 타겟팅/선택자 -> .클래스명{속성:값;속성:값;속성:값;속성:값;}
 - 각각의 요소/그룹을 타겟팅 하기 위해서 사용
 - 여러 태그(태그의 종류가 달라도 무관)에 동일한 클래스명을 줄 수 있다.(그룹)
 - 하나의 태그에 여러개의(2개이상)클래스명을 부여할 수 있다.(다중클래스)
   -> ex) <태크 class="클래스명1 클래스명2 클래스명3 ......"
 - 태그의 타겟팅(선택자) 역할만 수행

2)id => 동일한 이름을 사용할 수 없다.(그루핑 불가능)
 - <태그 id="id명">
 - css 타겟팅/선택자 -> #아이디명{속성:값;속성:값;속성:값;속성:값;}
 - 각각의 요소만 타겟팅할 수 있다. (한 html페이지에 아이디는 오직 1개만 존재)
 - 하나의 태그에 하나의 id만 존재한다.
 - 태그의 타겟팅(선택자 역할) + 또 다른 중요한 역할 수행 (이후 수업 예정)
 
 *우선순위(css)
 - css코드의 하단에 위치한 중복된 속성이 우선순위를 가진다.
 태그명 < class명 < id명
 
 
 
 
 
 
 
 
 
 
 
