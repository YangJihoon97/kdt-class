6-22

웹 표준  
W3C(World Wide Web Consortium)에서 규율을 정하고 표준화 > 팀 버너스 리
www.w3.org
HTML  CSS

웹1세대(1998~2003)
HTML4.01+CSS1
-문법에 상관없이 결과중시
-이지워크 사용

웹2세대(2004~2010)
XHTML1.0+CSS2
-웹표준과 접근성의 개념 생김(가이드라인)>웹 퍼블리셔 탄생

웹3세대(2011~)
HTML5+CSS3
-웹표준과 접근성 대폭 향상
-모바일 웹/반응형 웹 등 
-HTML5>웹에만 국한되지 않는 넓은 범주

*DOCTYPE- 웹브라우저가 웹세대(HTML)를 구분하도록 하는 코드

웹 브라우저 
1.크롬(PC/모바일 전부 지원) - 구글
2.사파리(MAC OS/모바일) - 애플
3.파이어폭스(PC/모바일) 
4.오페라(PC/모바일)
5. IE  / ~IE8(~웹2세대), IE9~IE11(win8) >Edge(win10)  - MS
6.웨일 - 네이버
*웹표준의 이유 
>여러 브라우저에서 같은 랜더링의 결과값를 얻기 위한 코딩의 문법
-코드호환여부는 caniuse.com

크로스 브라우징(Cross Browsing)
웹 표준 기술을 채용하여 다른 기종/플랫폼에 따라 달리 구현되는 
기술을 비슷하게 만들어냄과 동시에 어느 한쪽에 '최적화되어 치우치지
않도록' 공통 요소를 사용하여 웹 페이지를 제작하는 기법

웹표준 =>기대효과 => 크로스브라우징

-코드검사는 caniuse.com
페이지 검사는 표준 마크업 검사 (W3C)
통합검사 - W3C Markup Validation(http://validator.kldp.org)
CSS검사 -  W3C CSS Validation(http://jigsaw.w3.org/css-validator)

____________________________________________________________________
6-23

웹 접근성 

웹 접근성 연구소 (http://www.wah.or.kr/) 

웹 콘텐츠 제작기법
인식의 용이성
1. 텍스트가 아닌 컨텐츠에는 대체 텍스트 제공
2. 음성 컨텐츠에는 자막, 수화 등의 대체 수단 제공
3. 색상만으로 인식가능한 정보 X
4. 지시 사항이 모양, 크기, 위치, 방향, 색, 소리에 영향이 없어야함
5. 배경과 텍스트의 명도 대비는 * 4.5:1 이상이어야 함
6. 소리가 자동으로 재생되는 컨텐츠가 없어야 함 (*음소거하면 가능)
7. 이웃되어있는 컨텐츠가 구별될 수 있어야 한다
8. 단어의 중간에 공백을 추가하면 스크린 리더가 인식을 못함
입력장치 접근성
9. 모든 기능을 키보드로만으로 사용할 수 있어야 한다
10. 키보드에 의한 초점은 논리적으로 이동해야 하며 시각적으로 구별할 수 있어야 함
11. 사용자 입력 및 컨트롤은 조작 가능하도록 제공되어야 함(*tab키)
12. 시간제한이 있는 콘텐츠는 응답시간을 조절할 수 있어야 함
충분한 시간 제공
13. 자동으로 변경되는 콘텐츠는 움직임을 제어할 수 있어야 함
광과민성 발작 예방
14. 초당 3~50회 주기로 깜빡이거나 번쩍이는 콘텐츠는 금지
*쉬운 내비게이션(목차)
15. 콘텐츠의 반복되는 영역은 건너뛸 수 있어야 함
16. 페이지, 프레임, 콘텐츠 블록에는 적절한 제목을 제공해야 함
17. 링크 텍스트는 용도나 목적을 이해할 수 있도록 제공해야 함
이해의 용이성
18. 주로 사용하는 언어를 명시해야 함
19. 사용자가 의도하지 않은 기능(새 창, 초점에 의한 맥락 변화 등)은 실행되지 않아야 함
20. 콘텐츠는 논리적인 순서로 제공해야 함 (내용의 순서)
21. 표는 이해하기 쉽게 구성
22. 입력 서식에는 대응하는 레이블을 제공
23. 입력 오류를 정정할 수 있는 방법을 제공
견고성
24. 마크업 언어의 요소는 열고 닫음, 중첩 관계 및 속성 선언에 오류가 없어야 함
25. 콘텐츠에 포함된 웹애플리케이션은 접근성이 있어야 함
_____________________________________________________________________________
6.24 기본 마크업

<기본 마크업>
- html+css
    -> html4.01+css1 -> xhtml1.0+css2 -> html5+css3
- 메모장, 에디트플러스, 노트패드++, 드림위버, 나모웹에디터,
  톰켓, 서브라임텍스트, 이클립스, 압타나, *vs-code .......

- 웹의 기본 특성
  - 모든 경로의 폴더/파일명 => 영문(대/소), 숫자,_,- >반드시 첫글자 영문
  - 모든 html (태그, 요소, Element)는 영문 소문자로 표기
  - 해당 에디터 -> 최상위 폴더(root)를 세팅
  - 웹 관련 파일들은 무조건 선 저장 후 테스트 할 것
  - html은 거의/대부분 시작태그<태그명>와 끝태그</태그명>로 구성되어 있다.
     -예외) <meta>, 
  - 폰트의 기본 css
      >글꼴:굴림, 글자크기:16px, 글색:#0000(black)


- 웹문서 종류
  - 파일명, html (웹문서), 파일명.php, 파일명,asp(x), 파일명.jsp ...
  - 파일명.css (css 스타일파일)
  - 자바스크립트.js
  - 파일명.xml, 파일명.json ...

- 3가지의 <!DOCTYPE> doctype -> !+tap
  -<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/html4-transitional.dtd">
  -<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
  -<!DOCTYPE html>

- <html lang="en"> => 주언어명시
- 컨텐츠 타입 선언 한다.  => <meta charset="UTF-8">
- <title>전체사이트의 제목</title>

_________________________________________________________________________________________
<태그의 종류와 특징>
1. <p>
   - 단락의 요소(내용글)
   - 기본css -> margin(여백)

__________________________________________________________________________________________
css 스타일링 3가지 방식
-   css속성:값;css속성:값;css속성:값;css속성:값 (마지막 ; 생략)



1. 태그에 직접 쓰는 방법(인라인 스타일, 로컬 스타일)
<p style="font-size:16px; font-weight:bold; color:red; ">

2. HTML 문서에 스타일을 포함하는 방법(임베디드 스타일,페이지 스타일)
 <head></head> 태그 사이에 코딩
<style>
 태그명(속성:값;css속성:값;css속성:값)
</style>

*우선순위
 인라인 스타일 > 임베디드 스타일
